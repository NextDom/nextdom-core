eqlogic_get_all:
  path: '/eqlogic/all'
  controller: NextDom\Rest\EqLogicRest::getAll
  methods: GET
eqlogic_get_by_room:
  path: 'eqlogic/room/{roomId}'
  controller: NextDom\Rest\EqLogicRest::getByRoom
  methods: GET
  requirements:
    roomId: \d+
eqlogic_get_visible_by_room:
  path: 'eqlogic/room/visible/{roomId}'
  controller: NextDom\Rest\EqLogicRest::getVisibleByRoom
  methods: GET
  requirements:
    roomId: \d+
room_get_room:
  path: '/room/get/{roomId}'
  controller: NextDom\Rest\RoomRest::get
  methods: GET
  requirements:
    roomId: \d+
room_get_default_tree:
  path: '/room/get_tree'
  controller: NextDom\Rest\RoomRest::getDefaultTree
  methods: GET
room_get_tree:
  path: '/room/get_tree/{roomId}'
  controller: NextDom\Rest\RoomRest::getTree
  methods: GET
  requirements:
    roomId: \d+
room_get_root:
  path: '/room/get_roots'
  methods: GET
  controller: NextDom\Rest\RoomRest::getRoots
room_get_summaries:
  path: '/room/get_summary/{roomsList}'
  controller: NextDom\Rest\RoomRest::getRoomsSummary
  methods: GET
  requirements:
    roomsList: \d+;(\d+;*)+
room_get_summary:
  path: '/room/get_summary/{roomId}'
  controller: NextDom\Rest\RoomRest::getRoomSummary
  methods: GET
  requirements:
    roomdId: \d+
summary_get_all:
  path: '/summary/all'
  controller: NextDom\Rest\SummaryRest::getAll
  methods: GET
summary_get_room_tree:
  path: '/summary/get_room_tree/{roomId}'
  controller: NextDom\Rest\SummaryRest::getRoomTree
  methods: GET
  requirements:
    roomId: \d+
summary_get_default_room_tree:
  path: '/summary/get_default_room_tree'
  controller: NextDom\Rest\SummaryRest::getDefaultRoomTree
  methods: GET
changes_get:
  path: '/changes/get/{lastUpdate}'
  controller: NextDom\Rest\ChangesRest::get
  methods: GET
  requirements:
    lastUpdate: \d+
cmd_get_by_eqlogic:
  path: '/cmd/eqlogic/{eqLogicId}'
  controller: NextDom\Rest\CmdRest::getByEqLogic
  methods: GET
  requirements:
    eqLogicId: \d+
cmd_get_visible_by_eqlogic:
  path: '/cmd/eqlogic/visible/{eqLogicId}'
  controller: NextDom\Rest\CmdRest::getVisibleByEqLogic
  methods: GET
  requirements:
    eqLogicId: \d+
cmd_exec:
  path: '/cmd/exec/{cmdId}'
  controller: NextDom\Rest\CmdRest::exec
  methods: POST
  requirements:
    cmdId: \d+
logs_get_list:
  path: '/logs/list'
  controller: NextDom\Rest\LogsRest::getList
  methods: GET
logs_get:
  path: '/logs/get/{logFile}'
  controller: NextDom\Rest\LogsRest::get
  methods: GET
  requirements:
    logFile: "[-_.A-Za-z0-9]+"
scenario_get_all:
  path: '/scenario/all'
  controller: NextDom\Rest\ScenarioRest::getAll
  methods: GET
scenario_get_all_by_group:
  path: '/scenario/all/by_group'
  controller: NextDom\Rest\ScenarioRest::getAllByGroup
  methods: GET
scenario_launch:
  path: '/scenario/launch/{scenarioId}'
  controller: NextDom\Rest\ScenarioRest::launch
  methods: POST
  requirements:
    scenarioId: \d+
scenario_stop:
  path: '/scenario/stop/{scenarioId}'
  controller: NextDom\Rest\ScenarioRest::stop
  methods: POST
  requirements:
    scenarioId: \d+
scenario_enable:
  path: '/scenario/enable/{scenarioId}'
  controller: NextDom\Rest\ScenarioRest::enable
  methods: POST
  requirements:
    scenarioId: \d+
scenario_disable:
  path: '/scenario/disable/{scenarioId}'
  controller: NextDom\Rest\ScenarioRest::disable
  methods: POST
  requirements:
    scenarioId: \d+
dash_get:
  path: '/dash/{dashId}'
  controller: NextDom\Rest\DashRest::get
  methods: GET
  requirements:
    dashId: \d+
dash_save:
  path: '/dash/save'
  controller: NextDom\Rest\DashRest::save
  methods: POST
dash_delete:
  path: '/dash/{dashId}/delete'
  controller: NextDom\Rest\DashRest::delete
  methods: GET
dash_pictures:
  path: '/dash/pictures/{path}'
  controller: NextDom\Rest\DashRest::pictures
  methods: GET
  requirements:
    path: "[a-zA-Z0-9\\-_]+"
